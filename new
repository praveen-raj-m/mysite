import { Component } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { marked } from 'marked';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent {
  rawInput: string = '';
  prompt: string = '';
  renderedPrompt!: SafeHtml;

  // Define your headers here
  yourHeaders: string[] = [
    'Industry Code',
    'Portfolio Weight',
    'Benchmark Weight',
    'Portfolio Return',
    'Benchmark Return',
    'Wgtd Contribution',
    'Selection Effect'
  ];

  constructor(private sanitizer: DomSanitizer) {}

  generatePrompt() {
    try {
      const lines = this.rawInput.trim().split('\n');
      if (lines.length < 2) {
        this.prompt = 'Invalid table.';
        return;
      }

      const headers = this.yourHeaders;
      const dataLines = lines.slice(1); // Skip CSV's first row

      const dataRows = dataLines.map(line => {
        const values = line.split(',').map(v => v.trim());
        const row: any = {};
        headers.forEach((header, index) => {
          row[header] = values[index] || '';
        });
        return row;
      });

      const totalRow = dataRows.pop()!;
      const performanceCol = headers[headers.length - 1];
      const investmentCol = 'Portfolio Weight';

      // === Tagging helpers ===
      const performanceTags = this.assignRankTags(dataRows, performanceCol, 'Top Performer', true, 3);
      const underperformanceTags = this.assignRankTags(dataRows, performanceCol, 'Underperformer', false, 3);
      const hig
