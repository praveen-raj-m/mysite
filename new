Got it! You're working with the **Visual Studio Angular template** (Angular + ASP.NET Core hosted together) and your structure looks like:

```
angularapp_promptengineering/
├── angularapp_promptengineering.client/   ← Angular frontend
│   └── src/
│       └── app/
│           ├── app.component.ts
│           ├── app.component.html
│           ├── app.component.css
│           └── app.module.ts
├── angularapp_promptengineering.server/   ← .NET backend
```

You run it via:

```bash
cd angularapp_promptengineering.server
dotnet run
```

---

## ✅ Let's now begin step-by-step.

### ✅ Step 1: Frontend – Add Angular Code in `AppComponent`

#### 🔹 `app.module.ts`

Ensure `FormsModule` and `HttpClientModule` are imported:

```ts
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';

import { AppComponent } from './app.component';

@NgModule({
  declarations: [AppComponent],
  imports: [BrowserModule, FormsModule, HttpClientModule],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
```

---

#### 🔹 `app.component.ts`

```ts
import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  csvText = '';
  promptText = '';
  summary = '';
  selectedModel = 'gemma:27b';
  temperature = 0.7;

  constructor(private http: HttpClient) {}

  generatePrompt() {
    this.http.post<any>('/api/attribution/generate-prompt', { csv: this.csvText })
      .subscribe(res => this.promptText = res.prompt);
  }

  generateCommentary() {
    this.http.post<any>('/api/attribution/generate-commentary', {
      csv: this.csvText,
      promptOverride: this.promptText,
      model: this.selectedModel,
      temperature: this.temperature
    }).subscribe(res => this.summary = res.summary);
  }
}
```

---

#### 🔹 `app.component.html`

```html
<div class="container">
  <h2>Paste CSV</h2>
  <textarea [(ngModel)]="csvText" rows="10" placeholder="Paste CSV..."></textarea>

  <button (click)="generatePrompt()">Generate Prompt</button>

  <h3>Editable Prompt</h3>
  <textarea [(ngModel)]="promptText" rows="10" placeholder="Edit prompt..."></textarea>

  <div class="controls">
    <label>Model:
      <select [(ngModel)]="selectedModel">
        <option value="gemma:27b">gemma:27b</option>
        <option value="llama3">llama3</option>
        <option value="mistral">mistral</option>
      </select>
    </label>

    <label>Temperature: {{ temperature }}
      <input type="range" min="0" max="1" step="0.01" [(ngModel)]="temperature">
    </label>
  </div>

  <button (click)="generateCommentary()">Generate Commentary</button>

  <h3>LLM Summary</h3>
  <pre>{{ summary }}</pre>
</div>
```

---

#### 🔹 `app.component.css`

```css
.container {
  padding: 20px;
  font-family: Arial, sans-serif;
}

textarea {
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  font-family: monospace;
  border: 1px solid #ccc;
  border-radius: 5px;
}

button {
  padding: 10px 20px;
  margin: 10px 5px 10px 0;
  background-color: #007acc;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #005999;
}

.controls {
  display: flex;
  gap: 20px;
  align-items: center;
  margin: 10px 0;
}

pre {
  background: #f5f5f5;
  padding: 10px;
  white-space: pre-wrap;
  border-radius: 5px;
  border: 1px solid #ddd;
}
```

---

### ✅ Next Step (Step 2): Set up the .NET backend in `angularapp_promptengineering.server`

Let me know if you're ready to continue with the backend setup (controller, models, service) and I’ll walk you through that next.
