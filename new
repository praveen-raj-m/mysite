generatePrompt() {
  try {
    const lines = this.rawInput.trim().split('\n');
    if (lines.length < 2) {
      this.prompt = 'Invalid table.';
      return;
    }

    const headers = lines[0].split(',').map(h => h.trim());
    const dataLines = lines.slice(1);

    const dataRows = dataLines.map(line => {
      const values = line.split(',').map(v => v.trim());
      const row: any = {};
      headers.forEach((header, index) => {
        row[header] = values[index] || '';
      });
      return row;
    });

    const lastColumn = headers[headers.length - 1];
    const totalRow = dataRows[dataRows.length - 1];
    const isTotal = totalRow[headers[0]].toLowerCase() === 'total';

    const rowsToSort = isTotal ? dataRows.slice(0, -1) : [...dataRows];

    // Sort in descending order by last column
    rowsToSort.sort((a, b) => {
      const aVal = parseFloat(a[lastColumn]) || 0;
      const bVal = parseFloat(b[lastColumn]) || 0;
      return bVal - aVal;
    });

    // Tag top 3 and bottom 3
    rowsToSort.forEach((row, index, arr) => {
      if (index < 3) row['Tag'] = 'Top Performer';
      else if (index >= arr.length - 3) row['Tag'] = 'Underperformer';
    });

    const finalData = [...rowsToSort];

    if (isTotal) {
      totalRow['Tag'] = 'Total';
      finalData.push(totalRow);
    }

    const jsonString = JSON.stringify(finalData, null, 2);

    this.prompt =
      `You are a financial analyst. Analyze the following portfolio attribution data.\n\n` +
      `The table is sorted by the last column ("${lastColumn}").\n` +
      `The top 3 sectors are marked as "Top Performer", the bottom 3 as "Underperformer", and the last row is a "Total".\n\n` +
      `Data:\n${jsonString}`;
  } catch (err) {
    this.prompt = 'Error parsing input.';
  }
}
